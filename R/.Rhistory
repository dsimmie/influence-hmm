source('~/Dropbox/dev/r/create-modularity-dfs.R')
source('~/Dropbox/dev/r/create-modularity-dfs.R')
source('~/Dropbox/dev/r/create-modularity-dfs.R')
source('~/Dropbox/dev/r/create-modularity-dfs.R')
source('~/Dropbox/dev/r/create-modularity-dfs.R')
lapply(sort(unique(docs$Modularity.Class), print))
lapply(sort(unique(docs$Modularity.Class), print, print))
lapply(sort(unique(docs$Modularity.Class), FUN=print))
lapply(sort(unique(docs$Modularity.Class)), FUN=print))
lapply(sort(unique(docs$Modularity.Class)), FUN=print)
ls <- lapply(sort(unique(docs$Modularity.Class)), FUN=print)
ls <- lapply(sort(unique(docs$Modularity.Class)), FUN=function(x)x[x[,3]==i, ])
ls <- lapply(sort(unique(docs$Modularity.Class)), FUN=function(x) return(x[x[,3]==i, ]))
ls <- lapply(sort(unique(docs$Modularity.Class)), x=docs, FUN=function(x) return(x[x[,3]==i, ]))
source('~/Dropbox/dev/r/create-modularity-dfs.R')
ls <- lapply(sort(unique(docs$Modularity.Class)), x=docs, FUN=function(x) print(x)))
ls <- lapply(sort(unique(docs$Modularity.Class)), x=docs, FUN=function(x) print(x))))
ls <- lapply(sort(unique(docs$Modularity.Class)), x=docs, FUN=function(x)print(x))
ls <- lapply(sort(unique(docs$Modularity.Class)), FUN=function(x)print(x))
?lapply
ls[[3]]
ls <- lapply(sort(unique(docs$Modularity.Class)), FUN=function(x)docs[docs[,3]==x, ])
ls[[1]]
source('~/Dropbox/dev/r/create-modularity-dfs.R')
rm(ls)
rm(i)
dim(modularity.dfs)
dim(modularity.dfs[1])
dim(modularity.dfs[[1])
dim(modularity.dfs[[1]])
apply(modularity.dfs, dim)
apply(modularity.dfs, FUN=dim)
apply(modularity.dfs[[]], FUN=dim)
apply(modularity.dfs[], FUN=dim)
sapply(modularity.dfs, FUN=dim)
modularity.dfs[[11]]
sapply(modularity.dfs, FUN=dim)
modularity.dfs[[9]]
modularity.dfs[[1]][1]
modularity.dfs[[1]][1, ]
modularity.dfs[[1]][1,2]
corpora <- lapply(modularity.dfs, FUN=function(x)Corpus(VectorSource(x[ , "Tweets"]))
)
require(tm)
require(rWeka)
require(slam)
require(topicmodels)
require(Snowball)
require(wordcloud)
Sys.setenv(NOAWT=TRUE)
corpora <- lapply(modularity.dfs, FUN=function(x)Corpus(VectorSource(x[ , "Tweets"]))
)
corpora[[11]]
modularity.dfs[[11]]
source('~/Dropbox/dev/r/get-topic-models.R')
topic.models <- lapply(corpora, FUN=GetTopicModels))
topic.models <- lapply(corpora, FUN=GetTopicModels)
topic.models <- lapply(corpora, FUN=GetTopicModels, k=10)
community.terms <- lapply(topic.models, FUN=function(x)terms(x, 5))
community.terms
pal <- brewer.pal(9, "BuGn")
wordcloud(community.terms[[1]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"))
?wordcloud
unique(community.terms)
unique(community.terms[[1]])
unique(community.terms[[2]])
pal <- brewer.pal(9, "BuGn")
wordcloud(community.terms[[1]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"), min.freq=1)
wordcloud(community.terms[[7]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"), min.freq=1)
wordcloud(community.terms[[8]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"), min.freq=1)
wordcloud(community.terms[[4]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"), min.freq=1)
wordcloud(community.terms[[10]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"), min.freq=1)
community.terms[[10]]
wordcloud(community.terms[[8]], random.order=T, rot.per=.15, colors=pal, vfont=c("sans serif","plain"), min.freq=1)
rm(list=ls())
source('~/Dropbox/dev/r/generate-community-topic-models.R')
source('~/Dropbox/dev/r/generate-community-topic-models.R')
source('~/Dropbox/dev/r/generate-community-topic-models.R')
corpora <- lapply(modularity.dfs, FUN=function(x)Corpus(VectorSource(x[ , "Tweets"]))
)
modularity.dfs <- lapply(sort(unique(docs$Modularity.Class)), FUN=function(x)docs[docs[,'Modularity.Class']==x, ])
modularity.dfs <- lapply(sort(unique(eng.docs$Modularity.Class)), FUN=function(x)eng.docs[eng.docs[,'Modularity.Class']==x, ])
source('~/Dropbox/dev/r/add-modularity-class.R')
nodes <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/processed/gephi/network-node-table.csv')
docs <- AddModularityClassToTweetDocument(eng.docs, nodes)
eng.docs <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/eng-scala-tweet-docs.csv', stringsAsFactors=FALSE)
nodes <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/processed/gephi/network-node-table.csv', stringsAsFactors=FALSE)
eng.docs <- AddModularityClassToTweetDocument(eng.docs, nodes)
modularity.dfs <- lapply(sort(unique(eng.docs$Modularity.Class)), FUN=function(x)eng.docs[eng.docs[,'Modularity.Class']==x, ])
corpora <- lapply(modularity.dfs, FUN=function(x)Corpus(VectorSource(x[ , "Tweets"])))
topic.models <- lapply(corpora, FUN=GetTopicModels, k=10)
community.terms <- lapply(topic.models, FUN=function(x)terms(x, 5))
community.terms
network.data <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/processed/gephi/scala-sample2-network-nodes-table.csv')
data <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/symbol/final_model_obs-per_day.csv')
head(data)
headers <- data$Identifier
head(network.data)
library(stringr)
hdr = 'fdhjh_fttyy_yuyu_123'
which(hdr=='_')
hdr=='_'
hdr[hdr]=='_'
str_locate(hdr, "_")
hdr[6]
hdr(6)
hdr[6]
str_locate_all(hdr, "_")
max(str_locate_all(hdr, "_"))
str_locate_all(hdr, "_")
l = str_locate_all(hdr, "_")
l[[3]]
l[[2]]
l[[1]]
l[[1]][3,]
l[[1]][3,] + 2
n = l[[1]][3,]
n = l[[1]][3,][1]
n
n[1]
grep("4", strsplit("Test1234", "")[[1]])
grep("_", strsplit(hdr, "")[[1]])
max(grep("_", strsplit(hdr, "")[[1]]))
sapply(data$Identifier, FUN=function(x)str_sub(x, 0, max(grep("_", strsplit(hdr, "")[[1]]))) )
sapply(data$Identifier, FUN=function(x)str_sub(x, 0, max(grep("_", strsplit(x, "")[[1]]))) )
data$Header = as.character(data$Identifier)
head(data)
get.screen.name <- function(x)str_sub(x, 0, max(grep("_", strsplit(hdr, "")[[1]])))
data$Screen.Name <- get.screen.name(data$Header)
head(data$Screen.Name)
s.n <_ "_JamesWard_799616"
s.n <- "_JamesWard_799616"
get.screen.name(s.n)
get.screen.name <- function(x)substr(x, 0, max(grep("_", strsplit(hdr, "")[[1]])))
get.screen.name(s.n)
get.screen.name <- function(x)substr(x, max(grep("_", strsplit(hdr, "")[[1]])))
get.screen.name(s.n)
?substr
get.screen.name <- function(x)substr(x, max(grep("_", strsplit(x, "")[[1]])))
get.screen.name(s.n)
get.screen.name <- function(x)substr(x, 0, max(grep("_", strsplit(x, "")[[1]])))
get.screen.name(s.n)
get.screen.name <- function(x)substr(x, 0, max(grep("_", strsplit(x, "")[[1]]))-1)
get.screen.name(s.n)
data$Screen.Name <- get.screen.name(data$Header)
head(data)
head(data$Screen.Name)
get.screen.name <- function(x)substr(x, 0, (max(grep("_", strsplit(x, "")[[1]])))-1)
sapply(data$Header, FUN=get.screen.name(x))
sapply(data$Header, FUN=get.screen.name())
sapply(data$Header, FUN=get.screen.name)
data$Names <- apply(data$Header, FUN=get.screen.name)
sapply(data$Header, FUN=get.screen.name)
apply(data$Header, FUN=get.screen.name)
apply(data$Header, 1, FUN=get.screen.name)
apply(data$Header, dim=1, FUN=get.screen.name)
?apply
apply(data$Header, 1, FUN=get.screen.name)
lapply(data$Header, 1, FUN=get.screen.name)
lapply(data$Header, FUN=get.screen.name)
c <- sapply(data$Header, FUN=get.screen.name)
c
?sapply
c <- vapply(data$Header, FUN=get.screen.name)
c <- sapply(data$Header, FUN=get.screen.name, simplify=FALSE)
head(c)
c <- sapply(data$Header, FUN=get.screen.name, simplify=TRUE)
head(c)
c{1}
c[1]
c[ ,1]
dim(c)
c[1, ]
data$Names <- sapply(data$Header, FUN=get.screen.name, simplify=TRUE)
head(data)
data$Screen.Name <- sapply(data$Header, FUN=get.screen.name, simplify=TRUE)
rm(data$Names)
data <- subset(data, select = -c(Names) )
head(data)
data <- data[c("Header","Screen.Name")]
data
head(network.data)
get.screen.name
get.id <- function(x)substr(x, (max(grep("_", strsplit(x, "")[[1]]))), length(x)-1)
get.id(hdr)
hdr
get.id <- function(x)substr(x, (max(grep("_", strsplit(x, "")[[1]]))), length(x))
get.id(hdr)
get.id <- function(x)substr(x, max(grep("_", strsplit(x, "")[[1]] )), length(x))
get.id(hdr)
length(hdr)
nchar(hdr)
get.id <- function(x)substr(x, max(grep("_", strsplit(x, "")[[1]] )), nchar(x))
get.id(hdr)
get.id <- function(x)substr(x, max(grep("_", strsplit(x, "")[[1]] ))+1, nchar(x))
get.id(hdr)
data$Id <- sapply(data$Header, FUN=get.id, simplify=TRUE)
which.id <- which(outer(data$Id, network.data$Id, "=="), arr.ind=TRUE)
in.deg <- data[which.id[ ,1],'Id']
data$In.Degree = in.deg
in.deg
which.id
data$Id
network.data$Id
head(network.data)
hich.name <- which(outer(data$Screen.Name, network.data$Id, "=="), arr.ind=TRUE)
in.deg <- data[hich.name[ ,1],'Screen.Name']
in.deg
in.deg <- network.data[hich.name[ ,1],'In.Degree']
in.deg
source('~/Dropbox/dev/r/add-in-degree-to-headers.R')
source('~/Dropbox/dev/r/add-in-degree-to-headers.R')
data <- AddInDegreeToHeaders(data, network.data)
head(data)
network.data[network.data$Id='_JamesWard']
network.data[network.data$Id=='_JamesWard']
network.data[Id=='_JamesWard']
network.data[$Id=='_JamesWard']
network.data['_JamesWard']
network.data[ ,'_JamesWard']
network.data[ ,network.data$Id=='_JamesWard']
network.data[ ,"Id"]
network.data[ ,"Id"=="_JamesWard"]
network.data[1, ]
network.data[network.data$Id=="_JamesWard", ]
which.name <- which(outer(data$Screen.Name, network.data$Id, "=="), arr.ind=TRUE)
which.name
data[6777, ]
network.data[5001, ]
network.data[5001,'In.Degree']
network.data[which.name[ ,1],'In.Degree']
which.name
which.name[1:10, ]
data[8029, ]
network.data[8029, ]
network.data[2, ]
head(data$In.Degree)
head(data)
data[2, ]
which.name[2, ]
which.name[1, ]
which.name[which.name$row==2]
which.name[which.name==2]
which.name[which.name==2, ]
head(data)
head(network.data)
network.data[order(inetwork.data[,'Id']), ]
network.data[order(network.data[,'Id']), ]
net.data <- network.data[order(network.data[,'Id']), ]
head(net.data)
head(data)
data[data$Screen.Name=='_felipera', ]
data <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/symbol/final_model_norm_sixteen_disc_obs_per_week.csv')
head(data)
data$Screen.Name <- sapply(data$Identifier, FUN=get.screen.name, simplify=TRUE)
data <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/symbol/final_model_norm_sixteen_disc_obs_per_week.csv', stringsAsFactors=FALSE)
data$Screen.Name <- sapply(data$Identifier, FUN=get.screen.name, simplify=TRUE)
data$Id <- sapply(data$Identifier, FUN=get.id, simplify=TRUE)
head(data)
head(net.data)
data <- data[order(data[,'Id']), ]
head(data)
data(c(Screen.Name','Id'))
data(c('Screen.Name','Id'))
data[c('Screen.Name','Id')]
head(net.data)
net.data <- net.data[c('Id', 'In.Degree')]
names(net.data)
names(net.data) <- c("Screen.Name","In.Degree")
names(net.data)
head(data)
head(net.data)
data <- data[order(data[,'Screen.Name']), ]
net.data <- data[order(data[,'Screen.Name']), ]
head(net.data)
net.data <- net.data[c('Screen.Name', 'In.Degree')]
net.data <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/processed/gephi/scala-sample2-network-nodes-table.csv', stringsAsFactors=FALSE)
net.data <- net.data[c('Id', 'In.Degree')]
names(net.data) <- c("Screen.Name","In.Degree")
net.data <- net.data[order(net.data[,'Screen.Name']), ]
head(data)
data <- data[c('Screen.Name','Id')]
head(data)
head(net.data)
data$In.Degree <- net.data$In.Degree
head(data)
data <- data[order(-data[,'In.Degree']), ]
head(data)
total.retweets <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/total_retweets.csv')
head(total.retweets)
total.retweets <- total.retweets[c("Screen.Name","Id","Value")]
head(total.retweets)
total.retweets <- total.retweets[order(-total.retweets[,'Value']), ]
head(total.retweets)
head(data)
total.fc <- data
rm(data)
head(total.fc)
total.mentions <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/total_mentions.csv')
total.mentions <- total.mentions[c("Screen.Name","Id","Value")]
total.mentions <- total.mentions[order(-total.mentions[,'Value']), ]
total.unique.int <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/total_unique_interactions.csv')
total.unique.int <- total.unique.int[c("Screen.Name","Id","Value")]
total.unique.int <- total.unique.int[order(-total.unique.int[,'Value']), ]
total.mentions <- read.csv('/Users/dsimmie/Dropbox/research/Imperial/influence-evo/data/shared/data/new-model/total_mentions.csv')
total.mentions <- total.mentions[c("Screen.Name","Id","Value")]
total.mentions <- total.mentions[order(-total.mentions[,'Value']), ]
head(total.mentions)
head(total.unique.int)
fc.50 <- total.fc[50, ]
rt.50 <- total.retweets[50, ]
mt.50 <- total.mentions[50, ]
ui.50 <- total.unique.int[50, ]
fc.50
ui.50 <- total.unique.int[1:50, ]
mt.50 <- total.mentions[1:50, ]
rt.50 <- total.retweets[1:50, ]
fc.50 <- total.fc[1:50, ]
fc.50
fc.id.50 <- fc.50$Id
rt.id.50 <- rt.50$Id
mt.id.50 <- mt.50$Id
ui.id.50 <- ui.50$Id
?rbind
x <- c(1,2,3)
y <- c(2,4,6)
rbind(x,y)
is.matrix(rbind(x,y))
ranks.mat <- rbind(fc.id.50,rt.id.50,mt.id.50,ui.id.50)
ranks.mat
fc.id.50 <- as.integer(fc.50$Id)
rt.id.50 <- as.integer(rt.50$Id)
mt.id.50 <- as.integer(mt.50$Id)
ui.id.50 <- as.integer(ui.50$Id)
ranks.mat <- rbind(fc.id.50,rt.id.50,mt.id.50,ui.id.50)
ranks.mat
CESnoweights <- RankAggreg(ranks.mat, 15, method="CE", distance="Spearman", N=100, rho=.1)
library(RankAggreg)
CESnoweights <- RankAggreg(ranks.mat, 15, method="CE", distance="Spearman", N=100, rho=.1)
total.fc[total.fc$Id=="18160154", ]
opt.list <- c(18160154,17765013,14253068,16602164,6562002,52061552,18713,6586332,352053266,14429713,17196443,16942698,19757713,77293,14639927)
opt.list <- as.character(opt.list)
opt.list
total.fc[total.fc$Id==opt.list, ]
subset(total.fc, Id == opt.list)
total.fc$Id <- as.integer(total.fc$Id)
opt.list <- as.integer(opt.list)
subset(total.fc, Id == opt.list)
opt.list
total.fc$Id
ss <-subset(total.fc, Id == opt.list)
ss
ss <-subset(total.fc, Id == opt.list[1])
ss
ss <-subset(total.fc, Id == opt.list[1:3])
ss
ss <-subset(total.fc, Id == opt.list[1])
which(opt.list)
which(opt.list>0)
opt.list>0
which.opt <- which(outer(total.fc$Id, opt.list, "=="), arr.ind=TRUE)
which.opt
ss <-subset(total.fc, Id == which.opt)
total.fc[=which.opt, ]
total.fc[which.opt, ]
length(total.fc[which.opt, ])
dim(total.fc[which.opt, ])
dim(opt.list)
length(opt.list)
which.opt[1,]
which.opt[,1]
which.opt
dim(total.fc[which.opt[ ,1], ])
total.fc[which.opt[ ,1], ]
head(rt.50)
rt.50
mt.50
ui.50
opt.list
top.users <- total.fc[which.opt[ ,1], ]
top.users
top.users$Screen.Name
sample(top.users$Screen.Name, 15, replace=FALSE)
sample(total.fc$Screen.Name, 15, replace=FALSE)
rm(list=ls())
x <- c(1,2)
x
?read.table
str(x)
class(x)
y <- c("hel","lo")
class(y)
y
c <- read.csv('~/Desktop/test.csv')
c <- read.csv('~/Desktop/test.csv')
c
head(c)
names(c)
c <- read.csv('~/Desktop/test.csv')
c
c$Awards
c <- read.csv('~/Desktop/test.csv')
c$Awards
c <- read.csv('~/Desktop/test.csv', stringsAsFactors=FALSE)
c$Awards
c <- read.csv('~/Desktop/test.csv')
as.integer(c$Awards)
as.integer(levels(c$Awards))
levels(c$Awards)
c$Awards
library(stringr)
str_split(c$Awards,",")
c(str_split(c$Awards,","))
l <- c(str_split(c$Awards,","))
l
class(l)
ch <- str_split(c$Awards,",")
ch
ch[1]
ch[[1]]
fruits <- c(
"apples and oranges and pears and bananas",
"pineapples and mangos and guavas"
)
str_split(fruits, " and ")
source('~/Dropbox/dev/r/get-follower-count-ids-list.R')
source('~/Dropbox/r/get-screen-name.R')
get.screen.name <- function(x)substr(x, 0, (max(grep("_", strsplit(x, "")[[1]])))-1)
source('~/Dropbox/dev/r/get-follower-count-ids-list.R')
get.id <- function(x)substr(x, max(grep("_", strsplit(x, "")[[1]] ))+1, nchar(x))
source('~/Dropbox/dev/r/get-follower-count-ids-list.R')
opt.list
top.users
source('~/Dropbox/research/Imperial/influence-evo/workspaces/influence-analysis/scripts/correlate-ranks.R')
source('~/Dropbox/research/Imperial/influence-evo/workspaces/influence-analysis/scripts/load-clean-survey-data.R')
setwd('~/git/influence-hmm')
getwd()
ls()
rm(list=ls())
dir()
setwd("R")
dir()
source('~/git/influence-hmm/R/load-influence-data.R')
source('~/git/influence-hmm/R/create-influence-data.R')
head(tmp.buzz)
influence.analysis
rowCount = dim(temporal.buzz)[1]
# Ignore the row name
obsCount = dim(temporal.buzz)[2]-1
reachIdx <- which(names(influence.analysis)=="Reach")
temporal.influence <- temporal.buzz
rowCount = dim(tmp.buzz)[1]
# Ignore the row name
obsCount = dim(tmp.buzz)[2]-1
reachIdx <- which(names(influence.analysis)=="Reach")
temporal.influence <- tmp.buzz
temporal.user <- as.character(temporal.buzz[1,1])
temporal.user <- as.character(tmp.buzz[1,1])
temporal.user
reach <- influence.analysis[influence.analysis$Ident==temporal.user, reachIdx]
reach
temporal.influence[1, 1] <- temporal.buzz[1,1]
temporal.influence[1, 1] <- tmp.buzz[1,1]
endRange <- (obsCount+1)
temporal.influence[1, 2:endRange] <- tmp.buzz[1, 2:endRange] * reach
reach
class(reach)
as.numeric(reach)
buzz.analysis
rm(list=ls())
source('~/git/influence-hmm/R/load-influence-data.R')
rm(list=ls())
source('~/git/influence-hmm/R/load-influence-data.R')
source('~/git/influence-hmm/R/create-influence-data.R')
tmp.influence <- addReachToBuzz(buzz.analysis, tmp.buzz)
temporal.user <- as.character(tmp.buzz[i,1])
temporal.user <- as.character(tmp.buzz[1,1])
temporal.user
head(influence.analysis)
influence.analysis
influence.analysis$Ident
source('~/git/influence-hmm/R/add-reach-to-buzz.R')
tmp.influence <- addReachToBuzz(buzz.analysis, tmp.buzz)
influence.analysis$Ident=="_kachick_505965036"
head(temporal.user)
head(tmp.buzz)
rm(list=ls())
inf <- read.csv('~/data/compleye-influence-rank.csv')
inf <- read.csv('~/data/complete-influence-rank.csv')
head(inf)
get.id
getwd()
source('get-id.R')
get.id
getId
inf$Id <- apply(inf, 1, getId)
library(stringr)
inf$Id <- apply(inf, 1, getId)
inf
head(inf)
inf$Id <- apply(inf$Ident, 1, getId)
getId(inf$Ident)
sapply(inf$Ident,getId)
inf$Id <- sapply(inf$Ident, getId)
head(inf)
top.pr <- inf[with(inf, order(-Reach))]
top.pr <- inf[with(inf, order(-Reach)), 'Id']
top.inf <- inf[with(inf, order(-Influence)), 'Influence']
top.buzz <- inf[with(inf, order(-Influence)), 'Buzz']
top.pr
top.inf
rm(list=ls())
